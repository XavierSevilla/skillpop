{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xavie\\\\bootcamp\\\\collab\\\\skylab-bootcamp-201909\\\\staff\\\\javier-sevilla\\\\skillpop\\\\skillpop-app\\\\src\\\\components\\\\App\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport './index.sass';\nimport Register from '../Register';\nimport Header from '../Header';\nimport Lo from '../Login';\nimport { Route, withRouter, Redirect } from 'react-router-dom';\nimport { authenticateUser, registerUser, retrieveUser, searchAads } from '../../logic';\nexport default withRouter(function ({\n  history\n}) {\n  // const [name, setName] = useState()\n  // const [tasks, setTasks] = useState([])\n  useEffect(() => {\n    const _sessionStorage = sessionStorage,\n          token = _sessionStorage.token; // (async () => {\n    //     if (token) {\n    //         const { name } = await retrieveUser(token)\n    //         setName(name)\n    //         await retrieveTasks(token)\n    //     }\n    // })()\n  }, [sessionStorage.token]);\n\n  async function handleRegister(name, surname, email, username, password) {\n    try {\n      await registerUser(name, surname, email, username, password);\n      history.push('/login');\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async function handleLogin(email, password) {\n    try {\n      const token = await authenticateUser(email, password);\n      sessionStorage.token = token;\n      history.push('/search');\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  function handleGoBack() {\n    history.push('/');\n  }\n\n  function handleLogout() {\n    sessionStorage.clear();\n    handleGoBack();\n  }\n\n  const _sessionStorage2 = sessionStorage,\n        token = _sessionStorage2.token;\n  return React.createElement(React.Fragment, null, React.createElement(Route, {\n    path: \"/\",\n    render: () => React.createElement(Header, {\n      onBack: handleGoBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/register\",\n    render: () => React.createElement(Register, {\n      onRegister: handleRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/login\",\n    render: () => React.createElement(Login, {\n      onLogin: handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }));\n});\n{\n  /* <Route path=\"/register\" render={() => token ? <Redirect to=\"/board\" /> : <Register onRegister={handleRegister} onBack={handleGoBack} />} />\r\n  <Route path=\"/login\" render={() => token ? <Redirect to=\"/board\" /> : <Login onLogin={handleLogin} onBack={handleGoBack} />} />\r\n  <Route path=\"/board\" render={() => token ? <Board user={name} tasks={tasks} onLogout={handleLogout} onChangeTaskStatus={handleChangeTaskStatus} onNewTask={handleNewTask} /> : <Redirect to=\"/\" />} />\r\n  <Route path=\"/hello/:name\" render={props => <Hello name={props.match.params.name} />} />\r\n  <Route path=\"/hello/:name\" render={({ match: { params: { name } } }) => <Hello name={name} />} /> */\n}","map":{"version":3,"sources":["C:/Users/xavie/bootcamp/collab/skylab-bootcamp-201909/staff/javier-sevilla/skillpop/skillpop-app/src/components/App/index.js"],"names":["React","useState","useEffect","Register","Header","Lo","Route","withRouter","Redirect","authenticateUser","registerUser","retrieveUser","searchAads","history","sessionStorage","token","handleRegister","name","surname","email","username","password","push","error","console","handleLogin","handleGoBack","handleLogout","clear"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,cAAP;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,EAAP,MAAe,UAAf;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,kBAA5C;AACA,SAASC,gBAAT,EAA2BC,YAA3B,EAAyCC,YAAzC,EAAuDC,UAAvD,QAAwE,aAAxE;AAEA,eAAeL,UAAU,CAAC,UAAU;AAAEM,EAAAA;AAAF,CAAV,EAAuB;AAC7C;AACA;AAEAX,EAAAA,SAAS,CAAC,MAAM;AAAA,4BACMY,cADN;AAAA,UACJC,KADI,mBACJA,KADI,EAGZ;AACA;AACA;AAEA;AAEA;AACA;AACA;AACH,GAZQ,EAYN,CAACD,cAAc,CAACC,KAAhB,CAZM,CAAT;;AAeA,iBAAeC,cAAf,CAA8BC,IAA9B,EAAoCC,OAApC,EAA6CC,KAA7C,EAAoDC,QAApD,EAA8DC,QAA9D,EAAwE;AACpE,QAAI;AACA,YAAMX,YAAY,CAACO,IAAD,EAAOC,OAAP,EAAgBC,KAAhB,EAAuBC,QAAvB,EAAiCC,QAAjC,CAAlB;AAEAR,MAAAA,OAAO,CAACS,IAAR,CAAa,QAAb;AACH,KAJD,CAIE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ;;AAED,iBAAeE,WAAf,CAA2BN,KAA3B,EAAkCE,QAAlC,EAA4C;AACxC,QAAI;AACA,YAAMN,KAAK,GAAG,MAAMN,gBAAgB,CAACU,KAAD,EAAQE,QAAR,CAApC;AAEAP,MAAAA,cAAc,CAACC,KAAf,GAAuBA,KAAvB;AAEAF,MAAAA,OAAO,CAACS,IAAR,CAAa,SAAb;AACH,KAND,CAME,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ;;AAED,WAASG,YAAT,GAAwB;AAAEb,IAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AAAmB;;AAE7C,WAASK,YAAT,GAAwB;AACpBb,IAAAA,cAAc,CAACc,KAAf;AAEAF,IAAAA,YAAY;AACf;;AA/C4C,2BAiD3BZ,cAjD2B;AAAA,QAiDrCC,KAjDqC,oBAiDrCA,KAjDqC;AAmD7C,SAAO,0CACH,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,MAAM,EAAE,MAAM,oBAAC,MAAD;AAAS,MAAA,MAAM,EAAEW,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,EAEH,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,MAAM,EAAE,MAAM,oBAAC,QAAD;AAAU,MAAA,UAAU,EAAEV,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,EAGH,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,MAAM,EAAE,MAAM,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAES,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHG,CAAP;AAKH,CAxDwB,CAAzB;AAyDA;AAAC;;;;;AAIoG","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './index.sass'\r\nimport Register from '../Register'\r\nimport Header from '../Header'\r\nimport Lo from '../Login'\r\nimport { Route, withRouter, Redirect } from 'react-router-dom'\r\nimport { authenticateUser, registerUser, retrieveUser, searchAads} from '../../logic'\r\n\r\nexport default withRouter(function ({ history }) {\r\n    // const [name, setName] = useState()\r\n    // const [tasks, setTasks] = useState([])\r\n\r\n    useEffect(() => {\r\n        const { token } = sessionStorage;\r\n\r\n        // (async () => {\r\n        //     if (token) {\r\n        //         const { name } = await retrieveUser(token)\r\n\r\n        //         setName(name)\r\n\r\n        //         await retrieveTasks(token)\r\n        //     }\r\n        // })()\r\n    }, [sessionStorage.token])\r\n\r\n\r\n    async function handleRegister(name, surname, email, username, password) {\r\n        try {\r\n            await registerUser(name, surname, email, username, password)\r\n\r\n            history.push('/login')\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    async function handleLogin(email, password) {\r\n        try {\r\n            const token = await authenticateUser(email, password)\r\n\r\n            sessionStorage.token = token\r\n\r\n            history.push('/search')\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    function handleGoBack() { history.push('/') }\r\n\r\n    function handleLogout() {\r\n        sessionStorage.clear()\r\n\r\n        handleGoBack()\r\n    }\r\n\r\n    const { token } = sessionStorage\r\n\r\n    return <>\r\n        <Route path=\"/\" render={() => <Header  onBack={handleGoBack}/>} />\r\n        <Route path=\"/register\" render={() => <Register onRegister={handleRegister} />} />\r\n        <Route path=\"/login\" render={() => <Login onLogin={handleLogin}  />} />\r\n    </>\r\n})\r\n{/* <Route path=\"/register\" render={() => token ? <Redirect to=\"/board\" /> : <Register onRegister={handleRegister} onBack={handleGoBack} />} />\r\n<Route path=\"/login\" render={() => token ? <Redirect to=\"/board\" /> : <Login onLogin={handleLogin} onBack={handleGoBack} />} />\r\n<Route path=\"/board\" render={() => token ? <Board user={name} tasks={tasks} onLogout={handleLogout} onChangeTaskStatus={handleChangeTaskStatus} onNewTask={handleNewTask} /> : <Redirect to=\"/\" />} />\r\n<Route path=\"/hello/:name\" render={props => <Hello name={props.match.params.name} />} />\r\n<Route path=\"/hello/:name\" render={({ match: { params: { name } } }) => <Hello name={name} />} /> */}\r\n"]},"metadata":{},"sourceType":"module"}