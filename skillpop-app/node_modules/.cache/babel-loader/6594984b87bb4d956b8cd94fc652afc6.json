{"ast":null,"code":"require('dotenv').config();\n\nconst _require = require('skillpop-util'),\n      validate = _require.validate;\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nmodule.exports = function (token, image) {\n  validate.string(token);\n  validate.string.notVoid('token', token);\n  validate.string(idAd);\n  validate.string.notVoid('idAd', idAd);\n  let fData = new FormData();\n  fData.append('image', image);\n  return (async () => {\n    const res = await fetch(`${API_URL}/users/upload`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: fData\n    });\n    if (res.status === 201) return;\n  })();\n};","map":{"version":3,"sources":["C:/Users/xavie/bootcamp/collab/skylab-bootcamp-201909/staff/javier-sevilla/skillpop/skillpop-app/src/logic/save-image-profile/index.js"],"names":["require","config","validate","API_URL","process","env","REACT_APP_API_URL","module","exports","token","image","string","notVoid","idAd","fData","FormData","append","res","fetch","method","headers","Authorization","body","status"],"mappings":"AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;iBACqBD,OAAO,CAAC,eAAD,C;MAApBE,Q,YAAAA,Q;;AACR,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;;AAGAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AACrCR,EAAAA,QAAQ,CAACS,MAAT,CAAgBF,KAAhB;AACAP,EAAAA,QAAQ,CAACS,MAAT,CAAgBC,OAAhB,CAAwB,OAAxB,EAAiCH,KAAjC;AAEAP,EAAAA,QAAQ,CAACS,MAAT,CAAgBE,IAAhB;AACAX,EAAAA,QAAQ,CAACS,MAAT,CAAgBC,OAAhB,CAAwB,MAAxB,EAAgCC,IAAhC;AAEA,MAAIC,KAAK,GAAG,IAAIC,QAAJ,EAAZ;AACAD,EAAAA,KAAK,CAACE,MAAN,CAAa,OAAb,EAAsBN,KAAtB;AAEA,SAAO,CAAC,YAAY;AACZ,UAAMO,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEf,OAAQ,eAAZ,EAA4B;AAC/CgB,MAAAA,MAAM,EAAE,MADuC;AAE/CC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASZ,KAAM;AAAjC,OAFsC;AAG/Ca,MAAAA,IAAI,EAAER;AAHyC,KAA5B,CAAvB;AAKA,QAAIG,GAAG,CAACM,MAAJ,KAAe,GAAnB,EAAwB;AAE/B,GARM,GAAP;AASH,CAnBD","sourcesContent":["require('dotenv').config()\r\nconst { validate } = require('skillpop-util')\r\nconst API_URL = process.env.REACT_APP_API_URL\r\n\r\n\r\nmodule.exports = function (token, image) {\r\n    validate.string(token)\r\n    validate.string.notVoid('token', token)\r\n    \r\n    validate.string(idAd)\r\n    validate.string.notVoid('idAd', idAd)\r\n    \r\n    let fData = new FormData()\r\n    fData.append('image', image);\r\n\r\n    return (async () => {\r\n            const res = await fetch(`${API_URL}/users/upload`, {\r\n                method: 'POST',\r\n                headers: { Authorization: `Bearer ${token}` },\r\n                body: fData\r\n            })\r\n            if (res.status === 201) return   \r\n\r\n    })()\r\n}"]},"metadata":{},"sourceType":"module"}