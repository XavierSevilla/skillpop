{"ast":null,"code":"const call = require('../../utils/call');\n\nconst _require = require('skillpop-util'),\n      validate = _require.validate,\n      NotFoundError = _require.errors.NotFoundError; // const { env: { REACT_APP_API_URL: API_URL } } = process\n\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nmodule.exports = function (token) {\n  validate.string(token);\n  validate.string.notVoid('token', token);\n  return (async () => {\n    const res = await call(`${API_URL}/users`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n\n    if (res.status === 200) {\n      const user = JSON.parse(res.body);\n      user.lastAccess = new Date(user.lastAccess);\n      return user;\n    }\n\n    if (res.status === 404) throw new NotFoundError(JSON.parse(res.body).message);\n    throw new Error(JSON.parse(res.body).message);\n  })();\n};","map":{"version":3,"sources":["C:/Users/xavie/bootcamp/collab/skylab-bootcamp-201909/staff/javier-sevilla/skillpop/skillpop-app/src/logic/retrieve-user/index.js"],"names":["call","require","validate","NotFoundError","errors","API_URL","process","env","REACT_APP_API_URL","module","exports","token","string","notVoid","res","method","headers","Authorization","status","user","JSON","parse","body","lastAccess","Date","message","Error"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,kBAAD,CAApB;;iBACgDA,OAAO,CAAC,eAAD,C;MAA/CC,Q,YAAAA,Q;MAAoBC,a,YAAVC,M,CAAUD,a,EAC5B;;;AACA,MAAME,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiB;AAC9BT,EAAAA,QAAQ,CAACU,MAAT,CAAgBD,KAAhB;AACAT,EAAAA,QAAQ,CAACU,MAAT,CAAgBC,OAAhB,CAAwB,OAAxB,EAAiCF,KAAjC;AAEA,SAAO,CAAC,YAAY;AAChB,UAAMG,GAAG,GAAG,MAAMd,IAAI,CAAE,GAAEK,OAAQ,QAAZ,EAAqB;AACvCU,MAAAA,MAAM,EAAE,KAD+B;AAEvCC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASN,KAAM;AAAjC;AAF8B,KAArB,CAAtB;;AAKA,QAAIG,GAAG,CAACI,MAAJ,KAAe,GAAnB,EAAwB;AACpB,YAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWP,GAAG,CAACQ,IAAf,CAAb;AAEAH,MAAAA,IAAI,CAACI,UAAL,GAAkB,IAAIC,IAAJ,CAASL,IAAI,CAACI,UAAd,CAAlB;AAEA,aAAOJ,IAAP;AACH;;AAED,QAAIL,GAAG,CAACI,MAAJ,KAAe,GAAnB,EAAwB,MAAM,IAAIf,aAAJ,CAAkBiB,IAAI,CAACC,KAAL,CAAWP,GAAG,CAACQ,IAAf,EAAqBG,OAAvC,CAAN;AAExB,UAAM,IAAIC,KAAJ,CAAUN,IAAI,CAACC,KAAL,CAAWP,GAAG,CAACQ,IAAf,EAAqBG,OAA/B,CAAN;AACH,GAjBM,GAAP;AAkBH,CAtBD","sourcesContent":["const call = require('../../utils/call')\r\nconst { validate, errors: { NotFoundError } } = require('skillpop-util')\r\n// const { env: { REACT_APP_API_URL: API_URL } } = process\r\nconst API_URL = process.env.REACT_APP_API_URL\r\n\r\nmodule.exports = function (token) {\r\n    validate.string(token)\r\n    validate.string.notVoid('token', token)\r\n\r\n    return (async () => {\r\n        const res = await call(`${API_URL}/users`, {\r\n            method: 'GET',\r\n            headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n\r\n        if (res.status === 200) {\r\n            const user = JSON.parse(res.body)\r\n\r\n            user.lastAccess = new Date(user.lastAccess)\r\n\r\n            return user\r\n        }\r\n        \r\n        if (res.status === 404) throw new NotFoundError(JSON.parse(res.body).message)\r\n\r\n        throw new Error(JSON.parse(res.body).message)\r\n    })()\r\n}"]},"metadata":{},"sourceType":"module"}