{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\xavie\\\\bootcamp\\\\collab\\\\skylab-bootcamp-201909\\\\staff\\\\javier-sevilla\\\\skillpop\\\\skillpop-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\xavie\\\\bootcamp\\\\collab\\\\skylab-bootcamp-201909\\\\staff\\\\javier-sevilla\\\\skillpop\\\\skillpop-app\\\\src\\\\components\\\\App\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport './index.sass';\nimport Landing from '../Landing';\nimport Register from '../Register';\nimport Login from '../Login';\nimport Board from '../Board';\nimport { Route, withRouter, Redirect } from 'react-router-dom';\nimport { authenticateUser, registerUser, retrieveUser, listTasks, modifyTask, createTask } from '../../logic';\nimport Hello from '../Hello';\nexport default withRouter(function ({\n  history\n}) {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tasks = _useState4[0],\n        setTasks = _useState4[1];\n\n  useEffect(() => {\n    const _sessionStorage = sessionStorage,\n          token = _sessionStorage.token;\n\n    (async () => {\n      if (token) {\n        const _ref = await retrieveUser(token),\n              name = _ref.name;\n\n        setName(name);\n        await retrieveTasks(token);\n      }\n    })();\n  }, [sessionStorage.token]);\n\n  async function retrieveTasks(token) {\n    const tasks = await listTasks(token);\n    setTasks(tasks);\n  }\n\n  function handleGoToRegister() {\n    history.push('/register');\n  }\n\n  function handleGoToLogin() {\n    history.push('/login');\n  }\n\n  async function handleRegister(name, surname, email, username, password) {\n    try {\n      await registerUser(name, surname, email, username, password);\n      history.push('/login');\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async function handleLogin(username, password) {\n    try {\n      const token = await authenticateUser(username, password);\n      sessionStorage.token = token;\n      history.push('/board');\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  function handleGoBack() {\n    history.push('/');\n  }\n\n  function handleLogout() {\n    sessionStorage.clear();\n    handleGoBack();\n  }\n\n  async function handleChangeTaskStatus(id, status) {\n    try {\n      const _sessionStorage2 = sessionStorage,\n            token = _sessionStorage2.token;\n      await modifyTask(token, id, undefined, undefined, status);\n      await retrieveTasks(token);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async function handleNewTask(title, description) {\n    try {\n      const _sessionStorage3 = sessionStorage,\n            token = _sessionStorage3.token;\n      await createTask(token, title, description);\n      await retrieveTasks(token);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  const _sessionStorage4 = sessionStorage,\n        token = _sessionStorage4.token;\n  return React.createElement(React.Fragment, null, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => token ? React.createElement(Redirect, {\n      to: \"/board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }) : React.createElement(Landing, {\n      onRegister: handleGoToRegister,\n      onLogin: handleGoToLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/register\",\n    render: () => token ? React.createElement(Redirect, {\n      to: \"/board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      onRegister: handleRegister,\n      onBack: handleGoBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/login\",\n    render: () => token ? React.createElement(Redirect, {\n      to: \"/board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }) : React.createElement(Login, {\n      onLogin: handleLogin,\n      onBack: handleGoBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/board\",\n    render: () => token ? React.createElement(Board, {\n      user: name,\n      tasks: tasks,\n      onLogout: handleLogout,\n      onChangeTaskStatus: handleChangeTaskStatus,\n      onNewTask: handleNewTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/hello/:name\",\n    render: ({\n      match: {\n        params: {\n          name\n        }\n      }\n    }) => React.createElement(Hello, {\n      name: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["C:/Users/xavie/bootcamp/collab/skylab-bootcamp-201909/staff/javier-sevilla/skillpop/skillpop-app/src/components/App/index.js"],"names":["React","useState","useEffect","Landing","Register","Login","Board","Route","withRouter","Redirect","authenticateUser","registerUser","retrieveUser","listTasks","modifyTask","createTask","Hello","history","name","setName","tasks","setTasks","sessionStorage","token","retrieveTasks","handleGoToRegister","push","handleGoToLogin","handleRegister","surname","email","username","password","error","console","handleLogin","handleGoBack","handleLogout","clear","handleChangeTaskStatus","id","status","undefined","handleNewTask","title","description","match","params"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './index.sass'\r\nimport Landing from '../Landing'\r\nimport Register from '../Register'\r\nimport Login from '../Login'\r\nimport Board from '../Board'\r\nimport { Route, withRouter, Redirect } from 'react-router-dom'\r\nimport { authenticateUser, registerUser, retrieveUser, listTasks, modifyTask, createTask } from '../../logic'\r\nimport Hello from '../Hello'\r\n\r\nexport default withRouter(function ({ history }) {\r\n    const [name, setName] = useState()\r\n    const [tasks, setTasks] = useState([])\r\n\r\n    useEffect(() => {\r\n        const { token } = sessionStorage;\r\n\r\n        (async () => {\r\n            if (token) {\r\n                const { name } = await retrieveUser(token)\r\n\r\n                setName(name)\r\n\r\n                await retrieveTasks(token)\r\n            }\r\n        })()\r\n    }, [sessionStorage.token])\r\n\r\n    async function retrieveTasks(token) {\r\n        const tasks = await listTasks(token)\r\n\r\n        setTasks(tasks)\r\n    }\r\n\r\n    function handleGoToRegister() { history.push('/register') }\r\n\r\n    function handleGoToLogin() { history.push('/login') }\r\n\r\n    async function handleRegister(name, surname, email, username, password) {\r\n        try {\r\n            await registerUser(name, surname, email, username, password)\r\n\r\n            history.push('/login')\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    async function handleLogin(username, password) {\r\n        try {\r\n            const token = await authenticateUser(username, password)\r\n\r\n            sessionStorage.token = token\r\n\r\n            history.push('/board')\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    function handleGoBack() { history.push('/') }\r\n\r\n    function handleLogout() {\r\n        sessionStorage.clear()\r\n\r\n        handleGoBack()\r\n    }\r\n\r\n    async function handleChangeTaskStatus(id, status) {\r\n        try {\r\n            const { token } = sessionStorage\r\n\r\n            await modifyTask(token, id, undefined, undefined, status)\r\n\r\n            await retrieveTasks(token)\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    async function handleNewTask(title, description) {\r\n        try {\r\n            const { token } = sessionStorage\r\n\r\n            await createTask(token, title, description)\r\n\r\n            await retrieveTasks(token)\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const { token } = sessionStorage\r\n\r\n    return <>\r\n        <Route exact path=\"/\" render={() => token ? <Redirect to=\"/board\" /> : <Landing onRegister={handleGoToRegister} onLogin={handleGoToLogin} />} />\r\n        <Route path=\"/register\" render={() => token ? <Redirect to=\"/board\" /> : <Register onRegister={handleRegister} onBack={handleGoBack} />} />\r\n        <Route path=\"/login\" render={() => token ? <Redirect to=\"/board\" /> : <Login onLogin={handleLogin} onBack={handleGoBack} />} />\r\n        <Route path=\"/board\" render={() => token ? <Board user={name} tasks={tasks} onLogout={handleLogout} onChangeTaskStatus={handleChangeTaskStatus} onNewTask={handleNewTask} /> : <Redirect to=\"/\" />} />\r\n        {/* <Route path=\"/hello/:name\" render={props => <Hello name={props.match.params.name} />} /> */}\r\n        <Route path=\"/hello/:name\" render={({ match: { params: { name } } }) => <Hello name={name} />} />\r\n    </>\r\n})\r\n"]},"metadata":{},"sourceType":"module"}